{"version":3,"sources":["components/LineTop.js","components/Animation.js","App.js","serviceWorker.js","index.js"],"names":["LineTop","react_default","a","createElement","className","Component","Animation","id","src","flagUrl","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","from","to","amount","countries","getCurrencyData","bind","assertThisInitialized","handleInputChange","event","setState","defineProperty","currentTarget","name","value","preventDefault","countryFrom","toUpperCase","countryFromSubstring","substring","countryTo","countryToSubstring","url","axios","concat","resFrom","resTo","res","console","log","data","rates","flagOn","resultFrom","resultTo","result","resultRounded","Math","floor","flagFrom","flagTo","components_LineTop","onSubmit","type","onChange","components_Animation","class","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32c2ef2f.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\n\n\n\nclass LineTop extends Component{\n\n\n\n\n\n    render() {\n    \n        return (\n          \n            <hr className= \"top-line\"></hr>\n           \n        )}\n}\n\n\n\n\n\n\n\n\n\nexport default LineTop","\n\nimport React, { Component } from \"react\";\n\n\n\n\nclass Animation extends Component{\n\n\n\n\n\n    render() {\n    \n        return (\n\n            <img id = \"coins\" src=\"https://media.giphy.com/media/l3mZaGv4Krokd3GM0/giphy.gif\" />\n           \n        )}\n}\n\n\n\n\n\n\nexport default Animation\n\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport LineTop from \"./components/LineTop\"\nimport Animation from \"./components/Animation\";\n\n\nconst flagUrl = \"https://www.countryflags.io/\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n     from: \"\",\n     to: \"\",\n     amount: \"\",\n     countries: {}\n    \n    }\n\n    this.getCurrencyData = this.getCurrencyData.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    \n    this.setState({\n      \n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n\n \n\n  async getCurrencyData(event) {\n    event.preventDefault();\n   \n    const amount = this.state.amount\n   const countryFrom = this.state.from.toUpperCase()\n   const countryFromSubstring = countryFrom.substring(0,2)\n   const countryTo = this.state.to.toUpperCase()\n   const countryToSubstring = countryTo.substring(0,2)\n    const url = \"https://api.exchangeratesapi.io/latest?symbols=\";\n    const resFrom = await axios(`${url}${countryFrom}`);\n    const resTo = await axios(`${url}${countryTo}`);\n    const res = await axios(`${url}`);\n \n    console.log(resFrom.data.rates[countryFrom])\n    console.log(resTo.data.rates[countryTo])\n    // console.log(res)\n  //  console.log(countryFromSubstring)\n  //  console.log(countryToSubstring)\n    //help passing individual country data in the proper syntax from Tyson Morris//\n    this.setState({\n    flagOn:true,\n    countries: res.data.rates,\n     resultFrom: resFrom.data.rates[countryFrom],\n      resultTo: resTo.data.rates[countryTo],\n      result: ( (resTo.data.rates[countryTo]) / (resFrom.data.rates[countryFrom])) * amount,\n      resultRounded: Math.floor((( (resTo.data.rates[countryTo]) / (resFrom.data.rates[countryFrom])) * amount)),\n     flagFrom: countryFromSubstring,\n     flagTo: countryToSubstring,\n  })\n  // console.log(this.state.countries)\n  }\n \n//if this.state.from[0,1] === resultFrom, then return this.state.from\n  render() {\n   \n    return (\n      \n      <div className=\"App\">  \n          <LineTop />\n      <form onSubmit={this.getCurrencyData}>\n        <br></br>\n  <div className=\"amount\">\n      <h1>Amount</h1>\n        </div>\n      <div className=\"input-field\">\n         <input className = \"amount-input\" type=\"text\" name=\"amount\" value={this.state.amount} id=\"amount\" onChange={this.handleInputChange}/>\n       </div>\n       <div className=\"animation\">\n      <Animation />\n      </div>\n       <div className=\"result\">\n          <input className = \"result-submit\" type=\"submit\" value=\"$ Result $\"/>     \n    </div> \n    <div className= \"result-label\">\n      <h2>{this.state.result > 1? this.state.resultRounded: this.state.result}</h2>   \n    </div>\n   <div className=\"from-and-to-input\">\n   <container> \n   <h2>Country From</h2>\n  <div className =\"flag-from-div\">\n           <select className = \"from\" type=\"text\" name=\"from\" value={this.state.from} onChange={this.handleInputChange} id=\"from\">\n           <option value=\" \">   </option> \n           <option value=\"USD\">USD</option>\n           <option value=\"JPY\">JPY</option>\n           <option value=\"BGN\">BGN</option>\n           <option value=\"CZK\">CZK</option>\n           <option value=\"GBP\">GBP</option>\n           <option value=\"DKK\">DKK</option>\n           <option value=\"HUF\">HUF</option>\n           <option value=\"PLN\">PLN</option>\n           <option value=\"RON\">RON</option>\n           <option value=\"SEK\">SEK</option>\n           <option value=\"CHF\">CHF</option>\n           <option value=\"ISK\">ISK</option>\n           <option value=\"NOK\">NOK</option>\n           <option value=\"HRK\">HRK</option>\n           <option value=\"RUB\">RUB</option>\n           <option value=\"TRY\">TRY</option>\n           <option value=\"AUD\">AUD</option>\n           <option value=\"BRL\">BRL</option>\n           <option value=\"CAD\">CAD</option>\n           <option value=\"CNY\">CNY</option>\n           <option value=\"HKD\">HKD</option>\n           <option value=\"IDR\">IDR</option>\n           <option value=\"ILS\">ILS</option>\n           <option value=\"INR\">INR</option>\n           <option value=\"KRW\">KRW</option>\n           <option value=\"MXN\">MXN</option>\n           <option value=\"MYR\">MYR</option>\n           <option value=\"NZD\">NZD</option>\n           <option value=\"PHP\">PHP</option>\n           <option value=\"SGD\">SGD</option>\n           <option value=\"THB\">THB</option>\n           <option value=\"ZAR\">ZAR</option>\n           </select>\n       </div>\n       <div className=\"flag-from-img\">\n       <img class=\"flag-from\" src={this.state.flagOn?`${flagUrl + this.state.flagFrom}/shiny/64.png`:null} onChange={this.getCurrencyData}/> \n        </div>\n       </container>\n    <container>\n    <h2>Country To</h2>\n    <div className =\"flag-to-div\">\n           <select className = \"to\" type=\"text\" name=\"to\" value={this.state.to} onChange={this.handleInputChange} id=\"to\">\n           <option value=\" \">   </option>   \n           <option value=\"USD\">USD</option>\n           <option value=\"JPY\">JPY</option>\n           <option value=\"BGN\">BGN</option>\n           <option value=\"CZK\">CZK</option>\n           <option value=\"DKK\">DKK</option>\n           <option value=\"GBP\">GBP</option>\n           <option value=\"HUF\">HUF</option>\n           <option value=\"PLN\">PLN</option>\n           <option value=\"RON\">RON</option>\n           <option value=\"SEK\">SEK</option>\n           <option value=\"CHF\">CHF</option>\n           <option value=\"ISK\">ISK</option>\n           <option value=\"NOK\">NOK</option>\n           <option value=\"HRK\">HRK</option>\n           <option value=\"RUB\">RUB</option>\n           <option value=\"TRY\">TRY</option>\n           <option value=\"AUD\">AUD</option>\n           <option value=\"BRL\">BRL</option>\n           <option value=\"CAD\">CAD</option>\n           <option value=\"CNY\">CNY</option>\n           <option value=\"HKD\">HKD</option>\n           <option value=\"IDR\">IDR</option>\n           <option value=\"ILS\">ILS</option>\n           <option value=\"INR\">INR</option>\n           <option value=\"KRW\">KRW</option>\n           <option value=\"MXN\">MXN</option>\n           <option value=\"MYR\">MYR</option>\n           <option value=\"NZD\">NZD</option>\n           <option value=\"PHP\">PHP</option>\n           <option value=\"SGD\">SGD</option>\n           <option value=\"THB\">THB</option>\n           <option value=\"ZAR\">ZAR</option>\n           </select> \n    </div> \n    <div className=\"flag-to-img\">\n   <img className=\"flag-to\" src={this.state.flagOn?`${flagUrl + this.state.flagTo}/shiny/64.png`:null} onChange={this.getCurrencyData}/>\n   </div> \n  </container>  \n  </div> \n    </form>\n    <br></br>\n \n    <LineTop />\n       </div>\n       \n    )\n  }\n}\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}